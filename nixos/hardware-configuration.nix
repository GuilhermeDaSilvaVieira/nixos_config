# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/82a34d00-9a36-4b3e-ad5f-399c7b320e2b";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-8252e167-6a2c-4c5a-9300-e53bce3f4988".device = "/dev/disk/by-uuid/8252e167-6a2c-4c5a-9300-e53bce3f4988";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/E5C1-42EC";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/9706cc2d-82af-49b0-bfec-3ea90d7fd201";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-e192d0a0-029a-484f-9cd7-19a4b42623a1".device = "/dev/disk/by-uuid/e192d0a0-029a-484f-9cd7-19a4b42623a1";

  swapDevices = [ { device = "/dev/disk/by-uuid/27c9befc-0246-4155-9078-7a5b2c53d499"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
