# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/03f3d10a-695a-45ea-936c-cc46e5b3eb67";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-c6472cb4-1d2f-4150-a363-99226285d2f1".device =
    "/dev/disk/by-uuid/c6472cb4-1d2f-4150-a363-99226285d2f1";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0487-BA47";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/f203f42f-0b6d-4b51-9db9-4f6d2dee2f56";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-0fbe8857-844f-4c58-8bc1-4b70b9284597".device =
    "/dev/disk/by-uuid/0fbe8857-844f-4c58-8bc1-4b70b9284597";

  swapDevices = [
    { device = "/dev/disk/by-uuid/c85dbfb0-7360-49d6-adde-1dd1e0a27ef4"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
